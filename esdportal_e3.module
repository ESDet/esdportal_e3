<?php
/**
 * Implements hook_entity_info().
 */
function contactentity_entity_info() {

  $info = array();

  $info['contact'] = array(
    'label' => t('Contact'),
    'base table' => 'contactentity_contacts',
    'entity class' => 'ContactEntity',
    'controller class' => 'ContactentityController',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'fullname',
    ),
    'access callback' => '_contactentity_access_callback',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => 'admin/contacts',
      'controller class' => 'EntityDefaultUIController',
      'module' => 'contactentity',
    ),
    'fieldable' => TRUE,
    'bundles' => array(
      'contact' => array(
        'label' => t('Teacher'),
        'admin' => array(
          'path' => 'admin/contacts',
        ),
      ),
    ),
  'views controller class' => 'EntityDefaultViewsController',
  );
  return $info;
}

/**
 * Access callback for contact entities. Edit accordingly. 
 */
function _contactentity_access_callback($op, $contact = NULL, $account = NULL) {
  if ($op == 'view' || $op == 'update' || $op == 'create' || $op == 'delete') {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_menu().
 */
function contactentity_menu() {
  $items['contacts'] = array(
    'page callback' => '_contactentity_page',
    'access callback' => TRUE,
  );
  $items['contact/%'] = array(
    'title' => 'Contact',
    'page callback' => '_view_contact',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implements _contactentity_page().
 */
function _contactentity_page() {
  $contacts = entity_load('contact');
  $list = entity_view('contact', $contacts);
  $output = array();

  foreach ($list['contact'] as $contact) {
    $output[] = drupal_render($contact);
  }

return implode($output);
}

/**
 * Implements _view_contact().
 *
 * Callback function for displaying the individual contact page
 */
function _view_contact($id) {

  $contacts = entity_load('contact', array($id));
  $contact = $contacts[$id];

  drupal_set_title($contact->fullname);
  $output = entity_view('contact', array($contact));

  return $output;
}

/**
 * Extending the EntityAPIController for the Project entity.
 */
class ContactentityController extends EntityAPIController {
  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {

  $build = parent::buildContent($entity, $view_mode, $langcode, $content);

  // Our additions to the $build render array

  $build['created'] = array(
    '#type' => 'markup',
    '#markup' => date('d F, Y', check_plain($entity->created)),
    '#prefix' => '<p>Created: ',
    '#suffix' => '</p>',
  );
  $build['changed'] = array(
    '#type' => 'markup',
    '#markup' => date('d F, Y', check_plain($entity->changed)),
    '#prefix' => '<p>changed: ',
    '#suffix' => '</p>',
  );

  return $build;

  }
}

/**
 * Contact entity class extending the Entity class
 */
class ContactEntity extends Entity {

  /**
   * Change the default URI from default/id to contact/id
   */
  protected function defaultUri() {
    return array('path' => 'contact/' . $this->identifier());
  }

}

/**
 * Form definition for adding / editing a contact.
 */
function contact_form($form, &$form_state, $contact = NULL) {

  $form['fullname'] = array(
    '#title' => t('Contact name'),
    '#type' => 'textfield',
    '#default_value' => isset($contact->fullname) ? $contact->fullname : '',
    '#required' => TRUE,
  );

  $form['firstname'] = array(
    '#title' => t('Contact first name'),
    '#type' => 'textfield',
    '#default_value' => isset($contact->firstname) ? $contact->firstname : '',
    '#required' => TRUE,
  );

  $form['lastname'] = array(
    '#title' => t('Contact last name'),
    '#type' => 'textfield',
    '#default_value' => isset($contact->lastname) ? $contact->lastname : '',
    '#required' => TRUE,
  );

  field_attach_form('contact', $contact, $form, $form_state);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($contact->id) ? t('Update contact') : t('Save contact'),
    '#weight' => 50,
  );

  return $form;
}

/**
 * Submit handler for the contact add/edit form.
 */
function contact_form_submit($form, &$form_state) {
  $contact = entity_ui_form_submit_build_entity($form, $form_state);
  $contact->save();
  drupal_set_message(t('The contact: @fullname has been saved.', array('@fullname' => $contact->fullname)));
  $form_state['redirect'] = 'admin/contacts';
}
